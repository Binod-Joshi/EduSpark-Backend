const User = require("../../models/userModel/usersSchema");
const bcrypt = require('bcrypt');
const generateStrongPassword = require("../../utils/passwordGenerator");
const { sendMail } = require("../../utils/mailer");

const addTeacher = async (req, res) => {
    try {
        const { firstName,
            middleName,
            lastName,
            phone,
            email,
            gender,
            bloodGroup, subjectSpeciality, teaching } = req.body

        // Check if the Teacher already exists
        const existingTeacher = await User.findOne({ email });
        if (existingTeacher) {
            return res
                .status(400)
                .json({ message: "Teacher already exists with the email" });
        }

        //Create autogenerated password for teacher

        const autoGeneratedPassword = generateStrongPassword()
        const hashedPassword = await bcrypt.hash(autoGeneratedPassword, 10);

        // Create a new student user
        const newTeacher = new User({
            role: 'Teacher',
            firstName,
            middleName,
            lastName,
            phone,
            password: hashedPassword,
            email,
            gender,
            bloodGroup,
            subjectSpeciality
        });

        // Handle the teaching array
        if (teaching && Array.isArray(teaching)) {
            for (const item of teaching) {
                // Create a new teaching object
                const { branch, class: teacherClass, subject } = item;
                newTeacher.teaching.push({ branch, class: teacherClass, subject });
            }
        }

        // Save the new Student to the database
        await newTeacher.save();

        //Send Password credentials via mail to student
        await sendMail(email, 'Subject', `Your password is ${autoGeneratedPassword}`)

        res.status(201).json({ message: "Teacher added successfully" });

    } catch (error) {
        console.error("Error adding teacher:", error);
        res.status(500).json({ message: "Internal server error" });
    }

}

module.exports = addTeacher