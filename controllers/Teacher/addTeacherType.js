const bcrypt = require("bcrypt");
const generateStrongPassword = require("../../utils/passwordGenerator");
const TeacherCollege = require("../../models/userModel/teacher/teacherTypeModel/TeacherCollegeSchema");
const TeacherJrCollege = require("../../models/userModel/teacher/teacherTypeModel/TeacherJrCollegeSchema");
const TeacherSchool = require("../../models/userModel/teacher/teacherTypeModel/TeacherSchoolSchema");

const addCollegeTeacher = async (req, res) => {
  try {
    const {
      firstName,
      middleName,
      lastName,
      phone,
      email,
      gender,
      bloodGroup,
    } = req.body;

    //check if teacher already exists
    const existingTeacher = await TeacherCollege.findOne({ email });
    if (existingTeacher) {
      return res
        .status(400)
        .json({ message: "Teacher already exists with the email" });
    }

    const autoGeneratedPassword = generateStrongPassword();
    const hashedPassword = await bcrypt.hash(autoGeneratedPassword, 10);

    const newCollgeTeacher = new TeacherCollege({
      firstName,
      middleName,
      lastName,
      phone,
      email,
      password: hashedPassword,
      bloodGroup,
      gender,
      attendance: [{ date: new Date(), isPresent: false }],
    });

    // Save the new teacher user to the database
    await newCollgeTeacher.save();

    //Send Password credentials via mail to teacher
    await sendMail(
      email,
      "Your Account Credentials",
      `Your password is ${autoGeneratedPassword}`
    );

    res.status(201).json({ message: "Teacher added successfully" });
  } catch (error) {
    res
      .status(500)
      .json({ message: "Error while adding Teacher from server side" });
  }
};
